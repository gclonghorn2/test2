"""
Django settings for django_vue project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '07&6twjcq*wox-5_j5if*wl!t*krxdo9ft=a@y7n#olqn$ovy0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True #自动重启，后台打印错误信息

ALLOWED_HOSTS=['*']
#增加 跨域允许all hosts
CORS_ORIGIN_ALLOW_ALL=True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',#管理站点
    'django.contrib.auth',#认证系统
    'django.contrib.contenttypes',#内容类型框架
    'django.contrib.sessions',#会话框架
    'django.contrib.messages',#消息传递框架
    'django.contrib.staticfiles',#静态文件框架
    'rest_framework',#使用restframework必须增加
    'django_filters',#过滤
    'rest_framework.authtoken',#认证
    'corsheaders',#跨域
    'ckeditor',  #富文本编辑器
    'ckeditor_uploader',
    'users',#自定义应用
    'team',
    'documents',
    'recentDoc',
    'comments',
    'message',
    'recycleBin'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  #增加 解决跨域 放到中间件顶部
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',  #增加解决跨域
    'django.middleware.csrf.CsrfViewMiddleware',  #增加解决跨域
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_vue.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR+'/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_vue.wsgi.application'


# 配置自己的mysql数据库
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'now',
        'USER': 'root',
        'PASSWORD': 'cg029385',
        'HOST': '127.0.0.1',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',  #密码最小位数
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',  #不能是常见密码
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',  #不能是纯数字
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
#修改 语言和时区
LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False  #修改 使用datetimefield 要设置为false


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

#解决使用coreapi时提示AttributeError: 'AutoSchema' object has no attribute 'get_link' 错误
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    # 'PAGE_SIZE': 5,
    'DEFAULT_AUTHENTICATION_CLASSES': (
    'rest_framework.authentication.BasicAuthentication',
    'rest_framework.authentication.SessionAuthentication',  # 上面两个用于DRF基本验证
    'rest_framework.authentication.TokenAuthentication',  # TokenAuthentication
    'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
)
}


STATIC_URL = '/static/'
STATICFILES_DIRS = (
os.path.join(BASE_DIR,'static'), #（本设置是加载根目录下的静态文件目录）
)

AUTH_USER_MODEL = 'users.User' #增加 覆盖默认的user model

#jwt有效期设置
import datetime
JWT_AUTH = {
'JWT_EXPIRATION_DELTA': datetime.timedelta(days=10),
'JWT_AUTH_HEADER_PREFIX': 'JWT',
'JWT_RESPONSE_PAYLOAD_HANDLER': 'users.utils.jwt_response_payload_handler',
}
#ckedit
#ckeditior 图片上传
CKEDITOR_JQUERY_URL = 'https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js'
MEDIA_URL = "/media/"  #通过url locahost/media/访问保存的文件
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/') #文件上传根目录
CKEDITOR_UPLOAD_PATH = 'upload/' #富文本编辑器上传的文件的目录
CKEDITOR_IMAGE_BACKEND = 'pillow'  #图片处理工具

# 手机号码的验证正则式
REGEX_MOBILE = "^1[358]\d{9}$|^147\d{8}$|^176\d{8}$"

# 云片网的 APIKEY 设置
APIKEY = "6982fb8a80dfac6af94d87e45c51e45d"
#  change test1
